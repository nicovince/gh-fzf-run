#!/usr/bin/env bash
set -e

FZF_RUN_HELP="ctrl-h: show this help or hide it.
ctrl-r: Reload workflows
ctrl-a: Cancel workflow
ctrl-w: Watch workflow
ctrl-v: View workflow
ctrl-e: Re-run workflow
ctrl-o: Open workflow run in browser
ctrl-j: Reload with job List of workflow
ctrl-l: When viewing job list, show logs of job
ctrl-i: When viewing job list, open job in browser"
# Some version of wc (on mac at least) returns result with leading whitespaces, remove them.
FZF_PREVWIN_HEIGHT=$(echo "${FZF_RUN_HELP}" | wc -l | grep -o "[0-9]\+")

HDR_ACCEPT='Accept: application/vnd.github+json'
HDR_API_VERSION='X-GitHub-Api-Version: 2022-11-28'
export HDR_ACCEPT
export HDR_API_VERSION

function help()
{
    cat <<EOF
Select with fzf a workflow from GitHub Actions to view, watch, cancel.
Usage:
  gh fzf-run

Flags:
  -R, --repo OWNER/REPO Select another repository.
  -b, --branch          Filter runs by branch
  -w, --workflow        Filter runs by workflow
  --running             Show only running workflow
  --completed           Show only completed workflows
  -h, --help            Show help for command

Actions:
  From within fzf, multiple bindings are available:
$(echo "${FZF_RUN_HELP}" | sed '/^$/d' | sed 's/^/    /')
EOF
}

REPO=""
LIST_OPT=()
while [ $# -gt 0 ]; do
    key="$1"
    case ${key} in
        -h|--help)
            help
            exit 0
            ;;

        -b|--branch)
            LIST_OPT+=(--branch ${2@Q})
            shift
            ;;
        -w|--workflow)
            LIST_OPT+=(--workflow ${2@Q})
            shift
            ;;
        -R|--repository)
            REPO="$2"
            shift
            ;;
        --completed)
            JQ_FILTER=".[] | [select(.status | test(\"completed\"))] |"
            ;;
        --running)
            JQ_FILTER=".[] | [select(.status | test(\"completed\") | not)] |"
            ;;
    esac
    shift
done

if [ -z "${REPO}" ]; then
    repo_owner="$(git remote -v | head -1 | awk '{print $2}' | rev | cut -d '/' -f 2 | rev )"
    repo_name="$(git remote -v | head -1 | awk '{print $2}' | rev | cut -d '/' -f 1 | rev | cut -d '.' -f 1)"
    REPO="${repo_owner}/${repo_name}"
fi

# Check dependencies are available
if ! type -p fzf >/dev/null; then
  echo "fzf not found on the system" >&2
  exit 1
fi

JSON_FIELDS="status,conclusion,displayTitle,workflowName,headBranch,event,createdAt,databaseId"
TITLES='["STATUS", "CONCLUSION", "WORKFLOW", "TITLE", "BRANCH", "EVENT", "TIMESTAMP", "ID"]'
FIELDS="[.status, .conclusion, .workflowName, .displayTitle, .headBranch, .event, .createdAt, .databaseId]"

function get_last_arg()
{
    echo "$@" | rev | awk '{print $1}' | rev
}

function open_wf_run()
{
    repo="$1"
    run_id="$(get_last_arg $2)"
    url="$(gh api -H "${HDR_ACCEPT}" -H "${HDR_API_VERSION}" /repos/${repo}/actions/runs/${run_id} --jq '.html_url')"
    xdg-open "${url}"
}

function open_wf_job()
{
    repo="$1"
    run_id="$(echo $2 | rev | awk '{print $2}' | rev)"
    job_id="$(echo $2 | rev | awk '{print $1}' | rev)"
    url="$(gh api -H "${HDR_ACCEPT}" -H "${HDR_API_VERSION}" /repos/${repo}/actions/runs/${run_id}/jobs --jq ".jobs | map(select(.id==${job_id})) | .[].html_url")"
    xdg-open "${url}"
}

export REPO
export -f get_last_arg
export -f open_wf_run
export -f open_wf_job
QUERY="(${TITLES}), (map (select(.conclusion ==\"\").conclusion=\"-\") | ${JQ_FILTER} (.[] | ${FIELDS})) | @tsv"
LIST_OPT+=(--json ${JSON_FIELDS})
export FZF_DEFAULT_COMMAND="gh run -R ${REPO} list ${LIST_OPT[@]} --jq '${QUERY}' | column -ts $'\t'"
SHELL="$BASH" fzf \
    --no-mouse \
    --bind "ctrl-h:toggle-preview" --preview "echo '${FZF_RUN_HELP}'" --preview-window hidden \
    --bind "ctrl-r:reload#${FZF_DEFAULT_COMMAND}#" \
    --bind "ctrl-a:execute(get_last_arg {} | xargs gh run -R ${REPO} cancel)" \
    --bind "ctrl-a:+reload#${FZF_DEFAULT_COMMAND}#" \
    --bind 'ctrl-w:execute(get_last_arg {} | xargs gh run -R ${REPO} watch)' \
    --bind "ctrl-v:execute(get_last_arg {} | xargs gh run -R ${REPO} view | less -R)" \
    --bind "ctrl-e:execute-silent(get_last_arg {} | xargs gh run -R ${REPO} rerun)+reload#${FZF_DEFAULT_COMMAND}#" \
    --bind "ctrl-o:execute-silent#open_wf_run ${REPO} {}#" \
    --bind "ctrl-j:reload#get_last_arg {} | xargs -I JOBID gh api -H '${HDR_ACCEPT}' -H '${HDR_API_VERSION}' /repos/${REPO}/actions/runs/JOBID/jobs --jq '([\"JOB NAME\", \"RUN_ID\", \"JOB ID\"]), (.jobs.[] | [.name, .run_id, .id]) | @tsv' | column -ts $'\t'#" \
    --bind "ctrl-l:execute(get_last_arg {} | xargs -I JOBID gh run -R ${REPO} view --job JOBID --log | less -R)" \
    --bind "ctrl-i:execute-silent#open_wf_job ${REPO} {}#" \
    -0 --header-lines=1 --print-query \
    --preview-window=down,"${FZF_PREVWIN_HEIGHT}" \
    --color preview-bg:#222222
